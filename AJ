--[[
   Penanda Hub Script (Split into Multiple Tabs)
   Author: Arnel
--]]

--====================================================--
--== Rayfield Loader with loadstring fallback =======--
--====================================================--
local RayfieldScriptContent = game:HttpGet("https://sirius.menu/rayfield", true)
local Rayfield = nil

xpcall(function()
   Rayfield = loadstring(RayfieldScriptContent)()
end, function(err)
   warn("Failed to load Rayfield with loadstring:", err)
end)

if not Rayfield then
   Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end

if not Rayfield then
   print("Rayfield failed to load. Check your executor settings.")
   return
end

--====================================================--
--== Rayfield Window Setup ==========================--
--====================================================--
local Window = Rayfield:CreateWindow({
   Name = "ü¶á Penanda Hub ü¶á",
   Icon = 0,
   LoadingTitle = "ü¶á Penanda Hub ü¶á",
   LoadingSubtitle = "by Arnel",
   ShowText = "Rayfield",
   Theme = "Default",
   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false,
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "Big Hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink",
      RememberJoins = true
   },
   KeySystem = true,
   KeySettings = {
      Title = "ü¶á Penanda Hub ü¶á",
      Subtitle = "Key System",
      Note = "Ask the Owner For The Key",
      FileName = "Key",
      SaveKey = true,
      GrabKeyFromSite = false,
      Key = {"itachi"}
   }
})

--====================================================--
--== Startup Notification ===========================--
--====================================================--
Rayfield:Notify({
   Title = "ü¶á Penanda Hub ü¶á",
   Content = "·¥ò ü·¥á·¥Äs·¥á s ú·¥Ä Ä·¥á ·¥ç è s·¥Ñ Ä…™·¥ò·¥õ è üëâüëà",
   Duration = 5,
   Image = "rewind"
})

--====================================================--
--== TABS ============================================--
--====================================================--
local PlayerTab = Window:CreateTab("üßç Player", 0)
local MovementTab = Window:CreateTab("üèÉ Movement", 0)
local MiscTab = Window:CreateTab("üõ† Misc", 0)
local GamesTab = Window:CreateTab("üéÆ Games",0)

--====================================================--
--== PLAYER TAB ======================================--
--====================================================--

-- Infinite Jump
local isInfiniteJumpEnabled = false
local jumpConnection = nil

PlayerTab:CreateButton({
   Name = "Infinite Jump",
   Callback = function()
      isInfiniteJumpEnabled = not isInfiniteJumpEnabled

      if isInfiniteJumpEnabled then
         jumpConnection = game:GetService("UserInputService").JumpRequest:Connect(function()
            local character = game:GetService("Players").LocalPlayer.Character
            if character and character:FindFirstChildOfClass("Humanoid") then
               character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
            end
         end)
         Rayfield:Notify({
            Title = "Infinite Jump",
            Content = "Infinite Jump Enabled!",
            Duration = 1.3,
            Image = "check"
         })
      else
         if jumpConnection then
            jumpConnection:Disconnect()
            jumpConnection = nil
         end
         Rayfield:Notify({
            Title = "Infinite Jump",
            Content = "Infinite Jump Disabled!",
            Duration = 1.3,
            Image = "x"
         })
      end
   end
})

--====================================================--
--== MOVEMENT TAB ====================================--
--====================================================--

-- WalkSpeed Slider
MovementTab:CreateSlider({
   Name = "WalkSpeed",
   Range = {0, 1000},
   Increment = 5,
   Suffix = "Walkspeed",
   CurrentValue = 0,
   Flag = "WalkSpeedSlider",
   Callback = function(Value)
      local player = game.Players.LocalPlayer
      if player.Character and player.Character:FindFirstChild("Humanoid") then
         player.Character.Humanoid.WalkSpeed = Value
      end
   end
})


local Speed = 50
local isFlying = false
local FlyForce = nil
local flyConnection = nil

MovementTab:CreateButton({
   Name = "Fly (Mobile)",
   Callback = function()
      local Plr = game.Players.LocalPlayer
      local Camera = workspace.CurrentCamera

      if not isFlying then
         isFlying = true

         Rayfield:Notify({
            Title = "Fly Mode",
            Content = "Flying enabled!",
            Duration = 1.3,
            Image = "check"
         })

         if not Plr.Character then
            Plr.CharacterAdded:Wait()
         end
         local HRP = Plr.Character:WaitForChild("HumanoidRootPart")

         FlyForce = Instance.new("BodyVelocity")
         FlyForce.MaxForce = Vector3.new(9e9, 9e9, 9e9)
         FlyForce.Parent = HRP

         local GetMoveVector = require(
            Plr:WaitForChild("PlayerScripts")
               :WaitForChild("PlayerModule")
               :WaitForChild("ControlModule")
         )

         flyConnection = game:GetService("RunService").RenderStepped:Connect(function()
            if not HRP or not FlyForce then return end
            FlyForce.Velocity = Vector3.new()

            local MoveDir = GetMoveVector:GetMoveVector()
            if MoveDir.X ~= 0 then
               FlyForce.Velocity += Camera.CFrame.RightVector * MoveDir.X * Speed
            end
            if MoveDir.Z ~= 0 then
               FlyForce.Velocity -= Camera.CFrame.LookVector * MoveDir.Z * Speed
            end

            local lookDirection = Camera.CFrame.LookVector
            lookDirection = Vector3.new(lookDirection.X, 0, lookDirection.Z).Unit
            HRP.CFrame = CFrame.new(HRP.Position, HRP.Position + lookDirection)
         end)
      else
         isFlying = false
         if flyConnection then
            flyConnection:Disconnect()
            flyConnection = nil
         end
         if FlyForce then
            FlyForce:Destroy()
            FlyForce = nil
         end
         Rayfield:Notify({
            Title = "Fly Mode",
            Content = "Flight disabled. Landing!",
            Duration = 1.3,
            Image = "x"
         })
      end
   end
})

MovementTab:CreateSlider({
   Name = "Fly Speed",
   Range = {0, 1000},
   Increment = 5,
   Suffix = "Speed",
   CurrentValue = Speed,
   Flag = "FlySpeedSlider",
   Callback = function(Value)
      Speed = Value
      Rayfield:Notify({
         Title = "Fly Speed",
         Content = "Fly speed set to " .. tostring(Value),
         Duration = 0
      })
   end
})

--====================================================--
--== MISC TAB ========================================--
--====================================================--

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local noClipConnection = nil

MiscTab:CreateToggle({
   Name = "NoClip",
   CurrentValue = false,
   Callback = function(Value)
      local player = Players.LocalPlayer

      local function applyNoClip()
         if player.Character then
            for _, part in ipairs(player.Character:GetDescendants()) do
               if part:IsA("BasePart") then
                  part.CanCollide = not Value
               end
            end
         end
      end

      if Value then
         applyNoClip()
         noClipConnection = RunService.Stepped:Connect(applyNoClip)
         Rayfield:Notify({
            Title = "NoClip",
            Content = "NoClip Enabled.",
            Duration = 1.3,
            Image = "check"
         })
      else
         if noClipConnection then
            noClipConnection:Disconnect()
            noClipConnection = nil
         end
         applyNoClip()
         Rayfield:Notify({
            Title = "NoClip",
            Content = "NoClip Disabled.",
            Duration = 1.3,
            Image = "x"
         })
      end
   end
})

local HitboxSize = 2

MiscTab:CreateSlider({
   Name = "Hitbox Size",
   Range = {1, 100},
   Increment = 1,
   Suffix = "Size",
   CurrentValue = HitboxSize,
   Flag = "HitboxSlider",
   Callback = function(Value)
      HitboxSize = Value
      for _, player in pairs(Players:GetPlayers()) do
         if player ~= Players.LocalPlayer then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") then
               local HRP = character.HumanoidRootPart
               HRP.Size = Vector3.new(HitboxSize, HitboxSize, HitboxSize)
               HRP.Transparency = 0.7
               HRP.BrickColor = BrickColor.new("Really red")
               HRP.Material = Enum.Material.Neon
               HRP.CanCollide = false
            end
         end
      end
   end
})

local Button = GamesTab:CreateButton({
   Name = "Steal A Brainrot (Beta)",
   Callback = function()

loadstring(game:HttpGet("https://raw.githubusercontent.com/acsu123/HOHO_H/main/Loading_UI"))()
   end,
})

local Button = GamesTab:CreateButton({
   Name = "Jailbreak",
   Callback = function()

--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
loadstring(game:HttpGet('https://raw.githubusercontent.com/BlitzIsKing/UniversalFarm/main/Loader/Regular'))()
